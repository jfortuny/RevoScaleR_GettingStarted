library(RevoScaleR)
sampleDataDir <- rxGetOption("sampleDataDir")
getwd()
inputFile <- file.path(sampleDataDir, "AirlineDemoSmall.csv")
inputFile
?rxImport
airDS <- rxImport(inData = inputFile,      outFile = "~/data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE)
airDS <- rxImport(inData = inputFile,      outFile = "/data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE)
airDS <- rxImport(inData = inputFile,      outFile = "./data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE)
startTime <- Sys.time() airDS <- rxImport(inData = inputFile,     outFile = "./data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE) runTime <- Sys.time() - startTime
startTime <- Sys.time() airDS <- rxImport(inData = inputFile,     outFile = "./data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE,     overwrite = TRUE) runTime <- Sys.time() - startTime
startTime <- Sys.time() airDS <- rxImport(inData = inputFile,     outFile = "./data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE,     overwrite = TRUE) (runTime <- Sys.time() - startTime)
head(airDS)
str(airDS)
head(airDS)
names(airDS$blocksPerCompositeFile)
names(airDS$DayOfWeek)
colnames(airDS)
names(airDS)
colInfo <- list(DayOfWeek = list(type = "factor",             levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")))
startTime <- Sys.time() airDS <- rxImport(inData = inputFile,     outFile = "./data/ADS.xdf",     missingValueString = "M",     stringsAsFactors = TRUE,     overwrite = TRUE) (runTime <- Sys.time() - startTime)
head(airDS head(airDS)
head(airDS)
str(airDS)
startTime <- Sys.time() airDS <- rxImport(inData = inputFile,     outFile = "./data/ADS.xdf",     missingValueString = "M",     colInfo = colInfo,     overwrite = TRUE) (runTime <- Sys.time() - startTime)
dim(airDS)
nrow(airDS)
ncol(airDS)
head(airDS)
rxGetVarInfo(airDS)
myData <- rxReadXdf(airDS, numRows = 10, startRow = 100000)
myData
str(myData)
adsSummary <- rxSummary(~arrDelay + CRSDeptTime + DayOfWeek, data = airDS)
adsSummary <- rxSummary(~ArrDelay + CRSDeptTime + DayOfWeek, data = airDS)
adsSummary <- rxSummary( ~ ArrDelay + CRSDepTime + DayOfWeek, data = airDS)
adsSummary
rxSummary(~ArrDelay : DayOfWeek, data = airDS)
options("device.ask.default" = T)
rxHistogram(~ArrDelay, data = airDS)
rxHistogram( ~ CRSDepTime, data = airDS)
rxHistogram( ~ DayOfWeek, data = airDS)
myData <- rxDataStep(inData = airDS,     rowSelection = ArrDelay > 240 & ArrDelay <= 300,     varsToKeep = c("ArrDelay, " DayOfWeek ")) rxHistogram( ~ ArrDelay, data = myData)
myData <- rxDataStep(inData = airDS,     rowSelection = ArrDelay > 240 & ArrDelay <= 300,     varsToKeep = c("ArrDelay", "DayOfWeek"))
rxHistogram( ~ ArrDelay, data = myData)
options("device.ask.default" = F) myData <- rxDataStep(inData = airDS,     rowSelection = ArrDelay > 240 & ArrDelay <= 300,     varsToKeep = c("ArrDelay", "DayOfWeek")) rxHistogram( ~ ArrDelay, data = myData)
options("device.ask.default" = FALSE)
rxHistogram( ~ ArrDelay, data = myData)
arrDelayLm1 <- rxLinMod(formula = ArrDelay ~ DayOfWeek, data = airDS)
summary(arrDelayLm1)
arrDelayLm1
arrDelayLm2 <- rxLinMod(formula = ArrDelay ~ DayOfWeek, data = airDS,     cube = TRUE)
arrDelayLm2 <- rxLinMod(formula = ArrDelay ~ DayOfWeek, data = airDS,     cube = TRUE)
summary(arrDelayLm2)
countsDF <- rxResultsDF(arrDelayLm2, type = "counts")
countsDF
rxLinePlot(ArrDelay ~ DayOfWeek, data = countsDF, main = "Average Arrival Delay by Day Of Week")
